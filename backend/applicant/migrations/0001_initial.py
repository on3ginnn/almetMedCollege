# Generated by Django 4.2 on 2025-06-04 17:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Applicant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=255, verbose_name="ФИО")),
                (
                    "citizenship",
                    models.CharField(max_length=100, verbose_name="Гражданство"),
                ),
                (
                    "nationality",
                    models.CharField(max_length=100, verbose_name="Национальность"),
                ),
                ("birth_date", models.DateField(verbose_name="Дата рождения")),
                (
                    "birth_place",
                    models.CharField(max_length=255, verbose_name="Место рождения"),
                ),
                ("address", models.TextField(verbose_name="Адрес места жительства")),
                (
                    "certificate_series",
                    models.CharField(max_length=50, verbose_name="Серия, № аттестата"),
                ),
                (
                    "graduation_info",
                    models.CharField(
                        max_length=255,
                        verbose_name="Дата окончания и наименование учебного заведения",
                    ),
                ),
                (
                    "passport_info",
                    models.CharField(max_length=255, verbose_name="Паспортные данные"),
                ),
                ("inn", models.CharField(max_length=20, verbose_name="ИНН")),
                ("snils", models.CharField(max_length=20, verbose_name="СНИЛС")),
                (
                    "medical_policy",
                    models.CharField(
                        max_length=100, verbose_name="Медицинский полис (организация)"
                    ),
                ),
                (
                    "military_id",
                    models.BooleanField(
                        verbose_name="Приписное свидетельство (да/нет)"
                    ),
                ),
                (
                    "student_phone",
                    models.CharField(max_length=20, verbose_name="Телефон студента"),
                ),
                (
                    "mother_name",
                    models.CharField(max_length=255, verbose_name="ФИО мамы"),
                ),
                (
                    "mother_phone",
                    models.CharField(max_length=20, verbose_name="Телефон мамы"),
                ),
                (
                    "mother_job",
                    models.CharField(
                        max_length=255, verbose_name="Место работы и должность мамы"
                    ),
                ),
                (
                    "father_name",
                    models.CharField(max_length=255, verbose_name="ФИО папы"),
                ),
                (
                    "father_phone",
                    models.CharField(max_length=20, verbose_name="Телефон папы"),
                ),
                (
                    "father_job",
                    models.CharField(
                        max_length=255, verbose_name="Место работы и должность папы"
                    ),
                ),
                (
                    "has_medical_contract",
                    models.BooleanField(
                        verbose_name="Наличие договора с мед. организацией"
                    ),
                ),
                (
                    "medical_org_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Наименование мед. организации",
                    ),
                ),
                ("grade_russian", models.FloatField(verbose_name="Русский язык")),
                ("grade_biology", models.FloatField(verbose_name="Биология")),
                ("grade_chemistry", models.FloatField(verbose_name="Химия")),
                ("grade_math", models.FloatField(verbose_name="Математика")),
                ("grade_foreign", models.FloatField(verbose_name="Иностранный язык")),
                ("grade_physics", models.FloatField(verbose_name="Физика")),
                ("average_grade", models.FloatField(verbose_name="Средний балл")),
                (
                    "documents_submitted",
                    models.CharField(
                        choices=[("оригинал", "Оригинал"), ("копия", "Копия")],
                        max_length=50,
                        verbose_name="Подали документы",
                    ),
                ),
                (
                    "admission_type",
                    models.CharField(
                        choices=[("бюджет", "Бюджет"), ("коммерция", "Коммерция")],
                        max_length=50,
                        verbose_name="Бюджет/коммерция",
                    ),
                ),
                (
                    "via_gosuslugi",
                    models.BooleanField(
                        verbose_name="Подача заявления через Госуслуги"
                    ),
                ),
                (
                    "needs_dormitory",
                    models.BooleanField(verbose_name="Нуждается в общежитии"),
                ),
                (
                    "enrolled",
                    models.BooleanField(default=False, verbose_name="Зачислен"),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата подачи"),
                ),
            ],
        ),
    ]
